<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hackthebox Sherlocks Takedown</title>
      <link href="/2024/12/31/HTB-Sherlocks-Takedown/"/>
      <url>/2024/12/31/HTB-Sherlocks-Takedown/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="da9fa415862117a1d2c039f19bddce1590a82bf131ddaddf58794387ee29ea78"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> HTB-Sherlocks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
            <tag> Hackthebox </tag>
            
            <tag> HTB </tag>
            
            <tag> Sherlocks </tag>
            
            <tag> SOC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackthebox Sherlocks OpTinselTrace24-4:Neural Noel</title>
      <link href="/2024/12/31/HTB-Sherlocks-OpTinselTrace24-4-Neural-Noel/"/>
      <url>/2024/12/31/HTB-Sherlocks-OpTinselTrace24-4-Neural-Noel/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="884b91b2e8596122c956a6e1bae7a245b8dceb80177c71aa9fbf9384abfe3117"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> HTB-Sherlocks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
            <tag> Hackthebox </tag>
            
            <tag> HTB </tag>
            
            <tag> Sherlocks </tag>
            
            <tag> DFIR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HKCert CTF Forensic - Wheres the APT Attack 3 Guide</title>
      <link href="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/"/>
      <url>/2024/12/20/hkcert-Wheres-the-APT-Attack-3/</url>
      
        <content type="html"><![CDATA[<h1 id="HKCert-CTF-Forensic-Q3-Where’s-the-APT-Attack-APT攻擊在哪裡？-Hidden-Flag-隱藏旗"><a href="#HKCert-CTF-Forensic-Q3-Where’s-the-APT-Attack-APT攻擊在哪裡？-Hidden-Flag-隱藏旗" class="headerlink" title="HKCert CTF Forensic - Q3: Where’s the APT Attack?  APT攻擊在哪裡？ Hidden Flag? 隱藏旗?"></a>HKCert CTF Forensic - Q3: Where’s the APT Attack?  APT攻擊在哪裡？ Hidden Flag? 隱藏旗?</h1><h2 id="Info"><a href="#Info" class="headerlink" title="Info"></a>Info</h2><ul><li><strong>Author:</strong> Nightsedge</li><li><strong>Categories:</strong> forensics</li><li>Hidden Question!</li></ul><h2 id="Question-Description-zh-HK"><a href="#Question-Description-zh-HK" class="headerlink" title="Question Description (zh-HK)"></a>Question Description (zh-HK)</h2><p>請以第2題繼續。</p><p>您是高級網絡安全分析師。</p><p>您的經理要求您協助分析Windows內存映像，作為我們目前調查的一部分。</p><p>這臺受害機器已經被隔離，Windows內存映像已經被提取供您調查。</p><p>預計內存映像將揭示一個包含命令和控制（C2）進程的常見程序，通常被稱為信標 (beacon)。</p><p>隱藏旗。如果大神您找到的話請跟在下交流一下IR心法，</p><h2 id="Question-Description-en"><a href="#Question-Description-en" class="headerlink" title="Question Description (en)"></a>Question Description (en)</h2><p>Please continue from Q2.</p><p>You are the Senior Cybersecurity Analyst.</p><p>Your Manager is requesting your assistance in analyzing a Windows memory image as a component of our current investigation.</p><p>This victim machine has been isolated and the Windows memory image has been extracted for your review.</p><p>The memory image is expected to reveal a routine that includes a command and control (C2) process, commonly known as a beacon.</p><p>There is a hidden flag! It will be great to contact me if you can find it, you should be very great in IR.</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>Review the C# DLL program from Q2</li><li>Guess the command and control (C2) framework</li><li>Read Didier Stevens’s articles from SANS (Strongly Recommended)</li><li>Decrypt and Parse the beacon file, and get the Cobalt Strike beacon setting profile</li></ol><h3 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h3><ul><li>Real Malware</li><li>Can bypass Anti-Virus Solutions</li><li>Almost no signature? maybe not?</li><li>Not useful: malfind (because no signature), yarascan (or you have your own great Yara signature)</li><li>The author (me) is too lazy to tidy up the write-ups~</li></ul><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="1-Review-the-C-DLL-program-from-Q2"><a href="#1-Review-the-C-DLL-program-from-Q2" class="headerlink" title="1. Review the C# DLL program from Q2"></a>1. Review the C# DLL program from Q2</h3><p>The <code>mpclient.dll</code> called the <code>MsMpEng.dll</code> function <code>StartW</code> which is common export function from Cobalt Strike DLL stage&#x2F;stageless beacon.  </p><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.1.mpclient_main.png" class="" title="1.mpclient_main"><h3 id="2-Extract-profile-using-Sentinel-One’s-CobaltStrikeParser"><a href="#2-Extract-profile-using-Sentinel-One’s-CobaltStrikeParser" class="headerlink" title="2. Extract profile using Sentinel-One’s CobaltStrikeParser?"></a>2. Extract profile using Sentinel-One’s CobaltStrikeParser?</h3><p>Sorry, no matched starting point.<br>Because the shellcode is encrypted with an unknown XOR key. &#x3D;]  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ./parse_beacon_config.py file.0xd88e42603e00.0xd88e4045bc70.ImageSectionObject.MsMpEng.dll.img</span><br></pre></td></tr></table></figure><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.2.failed_CobaltStrikeParser.png" class="" title="2.failed_CobaltStrikeParser"><h3 id="3-Analysis-of-an-Encoded-Cobalt-Strike-Beacon-by-Didier-Stevens"><a href="#3-Analysis-of-an-Encoded-Cobalt-Strike-Beacon-by-Didier-Stevens" class="headerlink" title="3. Analysis of an Encoded Cobalt Strike Beacon by Didier Stevens"></a>3. Analysis of an Encoded Cobalt Strike Beacon by Didier Stevens</h3><p>This very great article by Didier Stevens:<br><a href="https://isc.sans.edu/diary/Analysis+of+an+Encoded+Cobalt+Strike+Beacon/29014">https://isc.sans.edu/diary/Analysis+of+an+Encoded+Cobalt+Strike+Beacon/29014</a></p><p>Strongly recommended to read the article again!<br>Follow this article’s ideas and steps to continue your analysis.<br>XOR known plaintext attacks!<br>Use option <code>-g o</code> (o &#x3D; overlay) to extract the overlay, and <code>-g s</code> (s &#x3D; stripped) to extract the PE file without overlay.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 pecheck.py file.0xd88e42603e00.0xd88e4045bc70.ImageSectionObject.MsMpEng.dll.img -g s -D | python3 xor-kpa.py -n cs-key-dot </span><br></pre></td></tr></table></figure><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.3.Analysisbeacon.png" class="" title="3.1.Analysisbeacon"><p>Now you can find the meanful strings, some windows API calls and file names.  </p><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.3.decoded_meanfulstrings.png" class="" title="3.2.decoded_meanfulstrings"><h3 id="4-Extract-the-Cobalt-Strike-profile-and-pretty-print-the-beacon-profile"><a href="#4-Extract-the-Cobalt-Strike-profile-and-pretty-print-the-beacon-profile" class="headerlink" title="4. Extract the Cobalt Strike profile and pretty print the beacon profile"></a>4. Extract the Cobalt Strike profile and pretty print the beacon profile</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 pecheck.py file.0xd88e42603e00.0xd88e4045bc70.ImageSectionObject.MsMpEng.dll.img -g s -D | python3 xor-kpa.py -n cs-key-dot -d &gt; cobaltstrike.sample</span><br><span class="line">python3 ./parse_beacon_config.py cobaltstrike.sample</span><br></pre></td></tr></table></figure><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.4.extractprofile.png" class="" title="4.extractprofile"><h3 id="5-Flag-from-profile"><a href="#5-Flag-from-profile" class="headerlink" title="5 Flag from profile"></a>5 Flag from profile</h3><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.5.profileflag.png" class="" title="5.1.profileflag"><img src="/2024/12/20/hkcert-Wheres-the-APT-Attack-3/5.6.flag.png" class="" title="5.2.flag"><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hkcert24&#123;4p7_4774ck_50154_c0b4l7_57r1k3_pr0f1l3_3x7r4c73d!&#125;</span><br></pre></td></tr></table></figure><h2 id="Reference-and-Respects"><a href="#Reference-and-Respects" class="headerlink" title="Reference and Respects"></a>Reference and Respects</h2><ul><li><a href="https://github.com/volatilityfoundation/volatility3">volatilityfoundation - Volatility3</a></li><li><a href="https://github.com/ufrisk/MemProcFS">ufrisk - MemProcFS</a></li><li><a href="https://isc.sans.edu/handler_list.html#didier-stevens">Didier Stevens - SANS</a></li><li><a href="https://isc.sans.edu/diary/Analysis+of+an+Encoded+Cobalt+Strike+Beacon/29014">Analysis of an Encoded Cobalt Strike Beacon - Didier Stevens</a></li><li><a href="https://github.com/Sentinel-One/CobaltStrikeParser">Sentinel-One - CobaltStrikeParser</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> HKcertCTF2024 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
            <tag> WindowsForensics </tag>
            
            <tag> HKcertCTF2024 </tag>
            
            <tag> MemoryForensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HKCert CTF Forensic - Wheres the APT Attack 2 Guide</title>
      <link href="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/"/>
      <url>/2024/12/11/hkcert-Wheres-the-APT-Attack-2/</url>
      
        <content type="html"><![CDATA[<h1 id="HKCert-CTF-Forensic-Q2-Where’s-the-APT-Attack-APT攻擊在哪裡？-Suspicious-process-可疑進程"><a href="#HKCert-CTF-Forensic-Q2-Where’s-the-APT-Attack-APT攻擊在哪裡？-Suspicious-process-可疑進程" class="headerlink" title="HKCert CTF Forensic - Q2: Where’s the APT Attack?  APT攻擊在哪裡？ Suspicious process 可疑進程"></a>HKCert CTF Forensic - Q2: Where’s the APT Attack?  APT攻擊在哪裡？ Suspicious process 可疑進程</h1><h2 id="Info"><a href="#Info" class="headerlink" title="Info"></a>Info</h2><ul><li><strong>Author:</strong> Nightsedge</li><li><strong>Categories:</strong> forensics</li></ul><h2 id="Question-Description-zh-HK"><a href="#Question-Description-zh-HK" class="headerlink" title="Question Description (zh-HK)"></a>Question Description (zh-HK)</h2><p>請以第1題繼續。</p><p>您是高級網絡安全分析師。</p><p>您的經理要求您協助分析Windows內存映像，作為我們目前調查的一部分。</p><p>這臺受害機器已經被隔離，Windows內存映像已經被提取供您調查。</p><p>預計內存映像將揭示一個包含命令和控制（C2）進程的常見程序，通常被稱為信標 (beacon)。</p><p>請找出信標進程中的旗。只需要一點逆向技巧吧?</p><h2 id="Question-Description-en"><a href="#Question-Description-en" class="headerlink" title="Question Description (en)"></a>Question Description (en)</h2><p>Please continue from Q1.</p><p>You are the Senior Cybersecurity Analyst.</p><p>Your Manager is requesting your assistance in analyzing a Windows memory image as a component of our current investigation.</p><p>This victim machine has been isolated and the Windows memory image has been extracted for your review.</p><p>The memory image is expected to reveal a routine that includes a command and control (C2) process, commonly known as a beacon.</p><p>Please find the flag from the beacon process. Just need a bit of Reverse engineering technique?</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>Open and analyze the memory image by using Volatility3 and MemProcFS</li><li>Identify the interesting persistence</li><li>Identify the malicious process</li><li>Identify the real malicious file and get flag from the process images</li></ol><h3 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h3><ul><li>Real Malware</li><li>Can bypass Anti-Virus Solutions</li><li>Almost no signature? maybe not?</li><li>Not useful: malfind (because no signature), yarascan (or you have your own great Yara signature)</li><li>The author (me) is too lazy to tidy up the write-ups~</li></ul><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="1-Find-the-persistence-via-MemProcFS"><a href="#1-Find-the-persistence-via-MemProcFS" class="headerlink" title="1. Find the persistence via MemProcFS"></a>1. Find the persistence via MemProcFS</h3><p>After you checked a lot, you can find that there are 2 tasks one is <code>Windows Defender Scheduled Scan</code> and another one is <code>Windows Defender Scheduled Scan-1</code> because of the naming convention from MemProcFS.  </p><p>From <code>timeline_task.csv</code>, it already showed this abnormal task.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.abnormal_schtask.png" class="" title="1.1.abnormal_schtask"><p>There are 2 scheduled tasks with same name. However,</p><ul><li><code>Windows Defender Scheduled Scan-1</code> is created by the system, which is a real and legitimate task.</li></ul><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.schtasks_check1.png" class="" title="1.2.schtasks_check1"><ul><li><code>Windows Defender Scheduled Scan</code> is created by <code>DIGITALHARBOUR\night01</code>, which should not be a legitimate task, possibly persistence with a fake name.</li></ul><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.schtasks_check2.png" class="" title="1.3.schtasks_check2"><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.schtasks_check2-author.png" class="" title="1.4.schtasks_check2-author"><p>And its action is <code>ProgramData\Windows Defender\MpCmdRun.exe</code>, which seems a bit wired.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.schtasks_check2-action.png" class="" title="1.5.schtasks_check2-action"><p>Also, the <code>timeline_ntfs.csv</code> from MemProcFS shows that the file creation and the update on this folder <code>ProgramData\Windows Defender\</code>.  </p><h3 id="2-1-Using-netscan-function-to-get-all-the-network-connected-processes-and-export-as-CSV-format"><a href="#2-1-Using-netscan-function-to-get-all-the-network-connected-processes-and-export-as-CSV-format" class="headerlink" title="2.1 Using netscan function to get all the network connected processes and export as CSV format"></a>2.1 Using netscan function to get all the network connected processes and export as CSV format</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol.py -r csv -f /home/kali/Downloads/hk_oct_apt_attack.mem windows.netscan.NetScan &gt; ./review_records/windows.netscan.NetScan.csv</span><br></pre></td></tr></table></figure><p>Save it as a xlsx excel file and paste records to the new excel sheet.  </p><p>Although you can search the reputation of the ForeginAddr IP addresses Threat Intelligence (TI), you know those results are still unrated or safe.  </p><h3 id="2-2-Using-pstree-function-to-get-all-the-network-activities-processes-and-export-as-CSV-format"><a href="#2-2-Using-pstree-function-to-get-all-the-network-activities-processes-and-export-as-CSV-format" class="headerlink" title="2.2 Using pstree function to get all the network activities processes and export as CSV format"></a>2.2 Using pstree function to get all the network activities processes and export as CSV format</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol.py -r csv -f /home/kali/Downloads/hk_oct_apt_attack.mem windows.pstree.PsTree &gt; ./review_records/windows.pstree.PsTree.csv</span><br></pre></td></tr></table></figure><p>And copy the result to the netscan excel with a new sheet.  </p><h3 id="2-3-Filter-out-network-activities-process-by-looking-up-the-netscan-excel-results"><a href="#2-3-Filter-out-network-activities-process-by-looking-up-the-netscan-excel-results" class="headerlink" title="2.3 Filter out network activities process by looking up the netscan excel results"></a>2.3 Filter out network activities process by looking up the netscan excel results</h3><p><code>=INDEX(windows.netscan.NetScan!F:F, MATCH(windows.pstree.PsTree!$B2, windows.netscan.NetScan!$I:$I,0))</code></p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.3.filterprocess.png" class="" title="2.3.filter process"><p>Filter out the <code>N.A.</code> values.</p><p>Suggested to collect those PIDs and listing them for further investigation.  </p><h3 id="2-4-Short-Sumup-the-findings"><a href="#2-4-Short-Sumup-the-findings" class="headerlink" title="2.4 Short Sumup the findings"></a>2.4 Short Sumup the findings</h3><p>As an experienced blue team or IR member, you will find that the <code>MpCmdRun.exe</code> file path is not an expected path!  </p><p><code>MpCmdRun.exe (PID: 10344)</code> is the Microsoft Defender Anti-Virus Software CMD toolkit. (legit application)</p><p>The correct path is <code>\ProgramData\Microsoft\Windows Defender\Platform\&lt;antimalware platform version&gt;\MpCmdRun.exe</code> from Microsoft Document.<br><code>C:\\ProgramData\\Windows Defender\\MpCmdRun.exe</code> is not correct.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/3.4.MpCmdRun.png" class="" title="2.4.MpCmdRun"><p>Therefore, it is believed that it is not an expected process from an abnormal scheduled task.</p><h2 id="3-Find-the-real-malicious-file"><a href="#3-Find-the-real-malicious-file" class="headerlink" title="3. Find the real malicious file"></a>3. Find the real malicious file</h2><h3 id="3-1-Dump-the-possible-process-executable-files"><a href="#3-1-Dump-the-possible-process-executable-files" class="headerlink" title="3.1 Dump the possible process executable files"></a>3.1 Dump the possible process executable files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f /home/kali/Downloads/hk_oct_apt_attack.mem -o ./dump_temp/ windows.dumpfiles.DumpFiles --pid 10344</span><br></pre></td></tr></table></figure><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/4.1.dumpc2.png" class="" title="3.1.dumpc2"><h3 id="3-2-Review-all-files"><a href="#3-2-Review-all-files" class="headerlink" title="3.2 Review all files"></a>3.2 Review all files</h3><h3 id="3-3-found-interesting-C-DLLs"><a href="#3-3-found-interesting-C-DLLs" class="headerlink" title="3.3 found interesting C# DLLs"></a>3.3 found interesting C# DLLs</h3><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/4.3.interestingCsharpdlls.png" class="" title="3.3.interestingC#dlls"><h3 id="3-4-Decompile-C-DLL-using-ILSpy"><a href="#3-4-Decompile-C-DLL-using-ILSpy" class="headerlink" title="3.4 Decompile C# DLL using ILSpy"></a>3.4 Decompile C# DLL using ILSpy</h3><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/4.4.interestingCsharpfunctions.png" class="" title="3.4.interestingCsharpfunctions"><ul><li>The <code>EncryptedKey</code> contains the flag, but you need to use <code>key</code> and <code>iv</code> to decrypt it.</li><li>The <code>Main</code> function will call the loaded <code>MsMpEng.dll</code> with <code>StartW()</code> function which may contain the real C2 payload.</li></ul><h3 id="3-5-Decrypt-the-EncryptedKey"><a href="#3-5-Decrypt-the-EncryptedKey" class="headerlink" title="3.5 Decrypt the EncryptedKey"></a>3.5 Decrypt the <code>EncryptedKey</code></h3><p>Here is the decypt program in C#:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">decryptctf</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> key = <span class="string">&quot;0123456789ABCDEF0123456789ABCDEF&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> iv = <span class="string">&quot;ABCDEF0123456789ABCDEF0123456789&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> EncryptedKey = <span class="string">&quot;uT9PNcMlxqUI3e95Kq67i3inLuBCJ1DzpdFNNLviRFA69gpLbtz0fOk2pTY4j+YsivyqzgYtOi71TZSF/9IbRg==&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">StringToByteArray</span>(<span class="params"><span class="built_in">string</span> hex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">byte</span>[] array = <span class="keyword">new</span> <span class="built_in">byte</span>[hex.Length / <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; array.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                array[i] = Convert.ToByte(hex.Substring(i * <span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> cipherText</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (Aes aesAlg = Aes.Create())</span><br><span class="line">            &#123;</span><br><span class="line">                aesAlg.Key = StringToByteArray(key);</span><br><span class="line">                aesAlg.IV = StringToByteArray(iv);</span><br><span class="line"></span><br><span class="line">                ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">using</span> (MemoryStream msDecrypt = <span class="keyword">new</span> MemoryStream(Convert.FromBase64String(cipherText)))</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream csDecrypt = <span class="keyword">new</span> CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))</span><br><span class="line">                <span class="keyword">using</span> (StreamReader srDecrypt = <span class="keyword">new</span> StreamReader(csDecrypt))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> srDecrypt.ReadToEnd();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(Decrypt(EncryptedKey));</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Get the base64 encoded string.</p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/4.5DecryptedEncryptedKey.png" class="" title="3.5DecryptedEncryptedKey"><h3 id="3-6-Decode-again-and-get-the-flag"><a href="#3-6-Decode-again-and-get-the-flag" class="headerlink" title="3.6 Decode again and get the flag"></a>3.6 Decode again and get the flag</h3><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-2/4.6Decodedflag.png" class="" title="3.6Decodedflag"><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hkcert24&#123;4p7_4774ck_71574_dll_51d3_l04d1n6!&#125;</span><br></pre></td></tr></table></figure><h3 id="Next-lets-do-some-analysis-on-the-C2-beacon-Coming-Soon"><a href="#Next-lets-do-some-analysis-on-the-C2-beacon-Coming-Soon" class="headerlink" title="Next lets do some analysis on the C2 beacon~ (Coming Soon~)"></a>Next lets do some analysis on the C2 beacon~ (Coming Soon~)</h3>]]></content>
      
      
      <categories>
          
          <category> HKcertCTF2024 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
            <tag> WindowsForensics </tag>
            
            <tag> HKcertCTF2024 </tag>
            
            <tag> MemoryForensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HKCert CTF Forensic - Wheres the APT Attack 1 Guide</title>
      <link href="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/"/>
      <url>/2024/12/11/hkcert-Wheres-the-APT-Attack-1/</url>
      
        <content type="html"><![CDATA[<h1 id="HKCert-CTF-Forensic-Q1-Where’s-the-APT-Attack-APT攻擊在哪裡？-Suspicious-file-可疑檔案"><a href="#HKCert-CTF-Forensic-Q1-Where’s-the-APT-Attack-APT攻擊在哪裡？-Suspicious-file-可疑檔案" class="headerlink" title="HKCert CTF Forensic - Q1: Where’s the APT Attack? APT攻擊在哪裡？ Suspicious file 可疑檔案"></a>HKCert CTF Forensic - Q1: Where’s the APT Attack? APT攻擊在哪裡？ Suspicious file 可疑檔案</h1><h2 id="Info"><a href="#Info" class="headerlink" title="Info"></a>Info</h2><ul><li><strong>Author:</strong> Nightsedge</li><li><strong>Categories:</strong> forensics</li></ul><h2 id="Question-Description-zh-HK"><a href="#Question-Description-zh-HK" class="headerlink" title="Question Description (zh-HK)"></a>Question Description (zh-HK)</h2><p>您是高級網絡安全分析師。</p><p>您的經理要求您協助分析Windows內存映像，作為我們目前調查的一部分。</p><p>這臺受害機器已經被隔離，Windows內存映像已經被提取供您調查。</p><p>預計內存映像將揭示一個包含命令和控制（C2）進程的常見程序，通常被稱為信標 (beacon)。</p><p>請找出常見有趣進程中可疑檔案中的旗。</p><h2 id="Question-Description-en"><a href="#Question-Description-en" class="headerlink" title="Question Description (en)"></a>Question Description (en)</h2><p>You are the Senior Cybersecurity Analyst.</p><p>Your Manager is requesting your assistance in analyzing a Windows memory image as a component of our current investigation.</p><p>This victim machine has been isolated and the Windows memory image has been extracted for your review.</p><p>The memory image is expected to reveal a routine that includes a command and control (C2) process, commonly known as a beacon.</p><p>Please find the flag from the suspicious file from the common interesting process?!</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>Open and analyze the memory image by using Volatility3 and MemProcFS</li><li>Identify the interesting file and get the flag from the process dump</li></ol><h3 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h3><ul><li>Real Malware</li><li>Can bypass Anti-Virus Solutions</li><li>Almost no signature? maybe not?</li><li>Not useful: malfind (because no signature), yarascan (or you have your own great Yara signature)</li><li>The author (me) is too lazy to tidy up the write-ups~</li></ul><h2 id="GonJK-provided-a-detailed-step-by-step-guide-for-this-challenge-for-this-competition-please-give-him-respect-with-thanks"><a href="#GonJK-provided-a-detailed-step-by-step-guide-for-this-challenge-for-this-competition-please-give-him-respect-with-thanks" class="headerlink" title="GonJK provided a detailed step-by-step guide for this challenge for this competition, please give him respect with thanks"></a>GonJK provided a detailed step-by-step guide for this challenge for this competition, please give him respect with thanks</h2><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><p>From the title of the question, already told that it is an APT Attack, APT means “Advanced persistent threat”.  </p><p>Therefore, if you understand this term, you can start by looking for persistent tactics on Windows OS.  </p><p>There is a good reference from MITRE ATT&amp;CK framework.  </p><p><a href="https://attack.mitre.org/matrices/enterprise/windows/">Windows Matrix</a></p><h2 id="1-Basic-Analysis-to-understand-the-memory-image-environment"><a href="#1-Basic-Analysis-to-understand-the-memory-image-environment" class="headerlink" title="1. Basic Analysis to understand the memory image environment"></a>1. Basic Analysis to understand the memory image environment</h2><h3 id="1-1-Using-Volatility3-commands-to-understand-the-memory-image-first"><a href="#1-1-Using-Volatility3-commands-to-understand-the-memory-image-first" class="headerlink" title="1.1 Using Volatility3 commands to understand the memory image first"></a>1.1 Using Volatility3 commands to understand the memory image first</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f hk_oct_apt_attack.mem windows.info.Info</span><br><span class="line">vol.py -f hk_oct_apt_attack.mem windows.envars.Envars</span><br><span class="line">vol.py -f hk_oct_apt_attack.mem windows.pstree.PsTree</span><br><span class="line">more...</span><br></pre></td></tr></table></figure><h3 id="1-2-Using-MemProcFS-Windows-to-mount-as-a-drive-and-understand-the-memory-image-first-Please-refer-to-GonJK-step-by-step-guide"><a href="#1-2-Using-MemProcFS-Windows-to-mount-as-a-drive-and-understand-the-memory-image-first-Please-refer-to-GonJK-step-by-step-guide" class="headerlink" title="1.2 Using MemProcFS (Windows) to mount as a drive and understand the memory image first (Please refer to GonJK step by step guide)"></a>1.2 Using MemProcFS (Windows) to mount as a drive and understand the memory image first (Please refer to GonJK step by step guide)</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\MemProcFS.exe <span class="literal">-device</span> .\hk_oct_apt_attack.mem <span class="literal">-forensic</span> <span class="number">1</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><h3 id="1-3-Volatility3-result-to-CSV"><a href="#1-3-Volatility3-result-to-CSV" class="headerlink" title="1.3 Volatility3 result to CSV"></a>1.3 Volatility3 result to CSV</h3><p>Why CSV? Maybe it is easier to co-relate the records and&#x2F;or create a timeline in excel.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vol.py -r csv -f /home/kali/Downloads/hk_oct_apt_attack.mem windows.netscan.NetScan &gt; ./review_records/windows.netscan.NetScan.csv</span><br><span class="line">vol.py -r csv -f /home/kali/Downloads/hk_oct_apt_attack.mem windows.pstree.PsTree &gt; ./review_records/windows.pstree.PsTree.csv</span><br><span class="line">python3 vol.py -r csv -f /home/kali/Downloads/hk_oct_apt_attack.mem windows.filescan.FileScan &gt; ./review_records/windows.filescan.FileScan.csv</span><br></pre></td></tr></table></figure><h2 id="2-Identify-the-interesting-file"><a href="#2-Identify-the-interesting-file" class="headerlink" title="2. Identify the interesting file"></a>2. Identify the interesting file</h2><h3 id="2-1-Way-1-Using-the-FileScan-function-to-find-the-interesting-file"><a href="#2-1-Way-1-Using-the-FileScan-function-to-find-the-interesting-file" class="headerlink" title="2.1. Way 1 - Using the FileScan function to find the interesting file"></a>2.1. Way 1 - Using the FileScan function to find the interesting file</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 vol.py -r csv -f /home/kali/Downloads/hk_oct_apt_attack.mem windows.filescan.FileScan &gt; ./review_records/windows.filescan.FileScan.csv</span><br></pre></td></tr></table></figure><p>You can go through all files, and there is a <code>.bat</code> inside the user(<code>night01</code>)’s Startup Folder <code>AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/2.1.findbatfile.png" class="" title="2.1.findbatfile"><p>Dump it for analysis.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 vol.py -f /home/kali/Downloads/hk_oct_apt_attack.mem -o ./dump_temp/ windows.dumpfiles.DumpFiles --virtaddr 0xd88e43c80bd0</span><br></pre></td></tr></table></figure><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/2.1.dumpbatfile.png" class="" title="2.1.dumpbatfile"><p>Failed to dump. sometimes like that, maybe the cache is corrupted or the MFT table is wrong.<br>You can try to fix this, but it will be hard to recover.  </p><p>Suggested to use MemProcFS to find it directly. Because MemProcFS already helped to fix this problem.<br><code>M:\forensic\ntfs\1\Users\night01\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\Windows_Update_kb4781465.bat</code>  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/2.1.MemProcFSbatfile.png" class="" title="2.1.MemProcFSbatfile"><h3 id="Way-2-2-2-Investigate-the-powershell-process"><a href="#Way-2-2-2-Investigate-the-powershell-process" class="headerlink" title="Way 2 - 2.2 Investigate the powershell process"></a>Way 2 - 2.2 Investigate the powershell process</h3><p>The <code>cmd.exe</code> and <code>powershell.exe</code> are the interesting processes as always.  </p><p>We can dump the powershell process (PID: <code>2064</code>). and grep strings with <code>$</code> because powershell script defines variables using <code>$</code>.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 vol.py -f /home/kali/Downloads/hk_oct_apt_attack.mem -o ./dump_temp/ windows.memmap.Memmap --pid 2064 --dump</span><br><span class="line">strings -n 8 ./dump_temp/pid.2064.dmp | grep <span class="string">&quot;\$&quot;</span>  &gt; ./dump_temp/strings8_out.txt</span><br></pre></td></tr></table></figure><p>if MemProcFS, check the minidump folder of the process.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/2.2.stringoutcontent.png" class="" title="2.2.stringoutcontent"><p>Now, The string output contains some interesting powershell commands:</p><ul><li><code>wevtutil el...</code></li><li><code>$base64String...</code></li><li><code>$newString...</code></li></ul><p>Back to the dump file and check those keywords again. You will find the following script.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/2.3.scriptcontent.png" class="" title="2.3.scriptcontent"><p>The script contains the following steps:</p><ul><li>clear the event logs</li><li>Base64 string</li><li>Reverse string</li></ul><p>And the “Write-Host” command contains the flag but you need to reverse the string and base64 decode it.  </p><p>Here is the flag.  </p><img src="/2024/12/11/hkcert-Wheres-the-APT-Attack-1/2.4reversedecodeflag.png" class="" title="2.4reversedecodeflag"><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hkcert24&#123;4p7_4774ck_600d_d1r3c710n_0n_7h15_m3m0ry_f0r3n51c&#125;</span><br></pre></td></tr></table></figure><h2 id="Hint-for-next-question-from-this-flag-“APT-attack-good-direction-on-this-memory-forensic”"><a href="#Hint-for-next-question-from-this-flag-“APT-attack-good-direction-on-this-memory-forensic”" class="headerlink" title="Hint for next question: from this flag “APT attack good direction on this memory forensic”"></a>Hint for next question: from this flag “APT attack good direction on this memory forensic”</h2><p>What’s the meaning of this hint?  </p><p>First of all, the bat file is place in <code>Users\night01\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> which is a typical persistence method.</p><h3 id="T1547-001-Boot-or-Logon-Autostart-Execution-Registry-Run-Keys-Startup-Folder"><a href="#T1547-001-Boot-or-Logon-Autostart-Execution-Registry-Run-Keys-Startup-Folder" class="headerlink" title="T1547.001: Boot or Logon Autostart Execution: Registry Run Keys &#x2F; Startup Folder"></a>T1547.001: Boot or Logon Autostart Execution: Registry Run Keys &#x2F; Startup Folder</h3><p>Please refer to the following URL link and read more about this technique:  </p><p><a href="https://attack.mitre.org/techniques/T1547/001/">https://attack.mitre.org/techniques/T1547/001/</a></p><h3 id="Therefore-Looking-at-persistence-is-a-good-direction-for-our-next-question"><a href="#Therefore-Looking-at-persistence-is-a-good-direction-for-our-next-question" class="headerlink" title="Therefore, Looking at persistence is a good direction for our next question."></a>Therefore, Looking at persistence is a good direction for our next question.</h3>]]></content>
      
      
      <categories>
          
          <category> HKcertCTF2024 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
            <tag> WindowsForensics </tag>
            
            <tag> HKcertCTF2024 </tag>
            
            <tag> MemoryForensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Preparation of Windows Forensic Virtual Machine</title>
      <link href="/2024/10/27/Preparation-of-Windows-Forensic-Virtual-Machine/"/>
      <url>/2024/10/27/Preparation-of-Windows-Forensic-Virtual-Machine/</url>
      
        <content type="html"><![CDATA[<h3 id="Customizer-URL"><a href="#Customizer-URL" class="headerlink" title="Customizer URL"></a>Customizer URL</h3><p><a href="https://github.com/digitalsleuth/WIN-FOR">https://github.com/digitalsleuth/WIN-FOR</a></p><h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><ul><li>Windows 10 Virtual Machine (Suggested because of Windows 11 some annoying designs)</li><li>Latest Update</li></ul><h3 id="Installation-Steps"><a href="#Installation-Steps" class="headerlink" title="Installation Steps"></a>Installation Steps</h3><ol><li><p>Download the installer from release<br><a href="https://github.com/digitalsleuth/WIN-FOR/releases/">WIN-FOR</a></p></li><li><p>Right-click and run the installer as the administrator</p><img src="/2024/10/27/Preparation-of-Windows-Forensic-Virtual-Machine/winfor-customizer-menu.png" class=""></li><li><p>Click “Uncheck All”</p></li><li><p>Click “Requirements” Category</p></li><li><p>Check “Themed” and choose one of the themes</p></li><li><p>Install</p></li><li><p>Reboot</p></li><li><p>Check Errors and Fix Errors (with reboot)</p></li><li><p>Install all and reboot</p></li></ol><h3 id="Respects-and-Thanks"><a href="#Respects-and-Thanks" class="headerlink" title="Respects and Thanks"></a>Respects and Thanks</h3><ul><li><a href="https://github.com/digitalsleuth/WIN-FOR">digitalsleuth - WIN-FOR</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Forensics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
            <tag> WindowsForensics </tag>
            
            <tag> Toolbox </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
